{"version":3,"sources":["components/Header/Header.js","components/SearchBar/SearchBar.js","components/EmployeeTable/EmployeeTable.js","utils/API.js","components/Directory/Directory.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","SearchBar","props","onClick","handleFormSubmit","onChange","handleInputChange","value","name","type","placeholder","EmployeeTable","scope","sortBy","class","state","filteredEmployees","map","employee","first","last","fullName","src","picture","thumbnail","alt","email","phone","login","uuid","API","search","axios","get","Directory","employees","sortDirections","initialSortDirections","event","target","setState","filterEmployees","toLowerCase","trim","preventDefault","key","primary","secondary","sortedEmployees","reverse","sort","a","b","localeCompare","input","filter","concat","includes","replace","then","res","data","results","catch","err","console","log","this","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e17d8a70.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n    return (\n        <header className=\"text-center\">\n            <h1>Employee Directory</h1>\n            <p>Names, photos, and contact information</p>\n        </header>\n    );\n};\n\nexport default Header;","import React from \"react\";\n\nconst SearchBar = (props) => {\n    return (\n        <div>\n            <form onClick={props.handleFormSubmit} className=\"w-75 mx-auto\">\n                <input\n                    onChange={props.handleInputChange}\n                    value={props.value}\n                    name=\"search\"\n                    type=\"text\"\n                    className=\"form-control text-center\"\n                    placeholder=\"Search by Name\"\n                />\n            </form>\n        </div>\n    );\n};\n\nexport default SearchBar;","import React from \"react\";\n\nconst EmployeeTable = (props) => {\n  return (\n    <table className=\"table table-striped table-sortable text-center\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Photo</th>\n          <th scope=\"col\" data-field=\"name\" data-sortable=\"true\">\n            <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>\n              Name <i class=\"bi bi-arrow-down-up\"></i></span>\n          </th>\n          <th scope=\"col\">Email</th>\n          <th scope=\"col\">Phone</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.state.filteredEmployees.map((employee) => {\n          const { first, last } = employee.name;\n          const fullName = `${first} ${last}`;\n\n          return (\n            <tr key={employee.login.uuid}>\n              <td>\n                <img src={employee.picture.thumbnail} alt={fullName} />\n              </td>\n              <td className=\"align-middle\">{fullName}</td>\n              <td className=\"align-middle\">{employee.email}</td>\n              <td className=\"align-middle\">{employee.phone}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default EmployeeTable;","import axios from 'axios';\n\nconst URL = \"https://randomuser.me/api/?results=100&nat=us\"\n\nconst API = {\n    search: function() {\n        return axios.get(URL);\n    }\n};\n\nexport default API;","import React from \"react\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport EmployeeTable from \"../EmployeeTable/EmployeeTable\";\nimport API from \"../../utils/API\";\n\nclass Directory extends React.Component {\n    state = {\n      search: \"\",\n      employees: [],\n      filteredEmployees: [],\n      sortDirections: this.initialSortDirections,\n    };\n  \n    get initialSortDirections() {\n      return {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n      };\n    }\n  \n    // When component mounts, load \"employees\" from Random User API\n    componentDidMount() {\n      API.search()\n        .then((res) =>\n          this.setState({\n            employees: res.data.results,\n            filteredEmployees: res.data.results,\n          })\n        )\n        .catch((err) => console.log(err));\n    }\n  \n    // Update search state to filter by employee name\n    handleInputChange = (event) => {\n      const value = event.target.value;\n      this.setState({ search: value });\n      this.filterEmployees(value.toLowerCase().trim());\n    };\n  \n    handleFormSubmit = (event) => {\n      event.preventDefault();\n    };\n  \n    // Sort by last name, then first.\n    sortBy = (key, primary = 0, secondary = 0) => {\n      let sortedEmployees = this.state.filteredEmployees;\n      if (this.state.sortDirections[key]) {\n        this.setState({\n          filteredEmployees: sortedEmployees.reverse(),\n          sortDirections: {\n            ...this.initialSortDirections,\n            [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\" : \"asc\",\n          },\n        });\n      } else {\n        sortedEmployees = this.state.filteredEmployees.sort((a, b) => {\n          a = a[key];\n          b = b[key];\n  \n          // If last names match, then sort that instance by first name.\n          if (primary) {\n            if (secondary && a[primary] === b[primary]) {\n              return a[secondary].localeCompare(b[secondary]);\n            }\n            return a[primary].localeCompare(b[primary]);\n          } else {\n            return a.localeCompare(b);\n          }\n        });\n  \n        this.setState({\n          filteredEmployees: sortedEmployees,\n          sortDirections: {\n            ...this.initialSortDirections,\n            [key]: \"asc\",\n          },\n        });\n      }\n    };\n  \n    filterEmployees = (input) => {\n      if (input) {\n        this.setState({\n          filteredEmployees: this.state.employees.filter((employee) => {\n            return (\n              employee.name.first\n                .toLowerCase()\n                .concat(\" \", employee.name.last.toLowerCase())\n                .includes(input) ||\n              employee.email.includes(input) ||\n              employee.phone.includes(input) ||\n              employee.phone.replace(/[^\\w\\s]/gi, \"\").includes(input)\n            );\n          }),\n        });\n      } else {\n        this.setState({ filteredEmployees: this.state.employees });\n      }\n    };\n  \n    render() {\n      return (\n        <div>\n          <SearchBar\n            value={this.state.search}\n            handleInputChange={this.handleInputChange}\n            handleFormSubmit={this.handleFormSubmit}\n          />\n          <div className=\"container mt-4\">\n            <EmployeeTable\n              state={this.state}\n              sortBy={this.sortBy}\n              filterEmployees={this.filterEmployees}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  export default Directory;","import React from \"react\";\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Directory from \"./components/Directory/Directory\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Directory />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}